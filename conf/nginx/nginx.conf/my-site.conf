# DOCS FOR CONFIGURATION:
# https://nginx.org/en/docs/
#
# Please, change/add only server_names and  /location sections.
# Remember to put your server name where it says "my-site".
# You don't need to add support for 80 port because requests are redirected to 443.
#
# Do NOT forget to add:
# add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
# on each server to get an "A+" on ssllabs.com.
#
# The other add_headers directives are to enforce security. It's better to set them in the webapp (vg: Content-Security-Policy), so you can delete them if you need. 

server {
    server_name my-site.com;

    # SSL configuration.
    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/my-site.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/my-site.com/privkey.pem;
    include  /etc/nginx-ssl/options-ssl-nginx.conf;
    ssl_dhparam /etc/dhparam/ssl-dhparams.pem;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Slowloris protection.
    client_body_timeout 5s;
    client_header_timeout 5s;
    underscores_in_headers on;

     # Preventing DOS.
    limit_req zone=base_req_limiter burst=10 nodelay;
    limit_conn base_conn_limiter 100;
    limit_req_log_level notice;

    # Headers protection.
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "no-referrer";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; img-src * 'self'; frame-src *; connect-src 'self' ws: wss: https:; style-src 'self'; style-src-elem 'self'" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Feature-Policy "autoplay 'none'; camera 'none';" always;
    add_header Feature-Policy "autoplay 'none'; camera 'none';" always;
    add_header X-Permitted-Cross-Domain-Policies "master-only" always;
    add_header Expect-CT "max-age=604800, enforce, report-uri='https://my-site.com/report'" always;
    fastcgi_hide_header "X-Powered-By"; 
    proxy_hide_header "X-Powered-By";
    
    location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_pass https://app1:443/;
        proxy_redirect off;
    }

    location /app2/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_pass https://app2:443/;
        proxy_redirect off;
    }

    location /protected_app/ {
        auth_basic "Please provide login infomation.";
        auth_basic_user_file /etc/nginx/passwords/sample;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_pass https://app2:443/;
        proxy_redirect off;
    }

    location /protected_app_only_tunnel/ {
        allow 127.0.0.1; #allow localhost only
        deny all; #deny all other sources
        auth_basic "Please provide login infomation.";
        auth_basic_user_file /etc/nginx/passwords/sample;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_pass https://app2:443/;
        proxy_redirect off;
    }

    # Nginx status
    # Note: modify this URL for safety.
    location = /control/nginx_status {
        allow 127.0.0.1; # Allow local host only.
        deny all;
        stub_status on;
        access_log  off;
   }

   # Error control.
    error_page 401 402 403 404 /400.html;
    location = /400.html {
        root /etc/nginx/html;
        internal;
    }

    error_page 500 501 502 503 504 /500.html;
    location = /500.html {
        root /etc/nginx/html;
        internal;
    }

#   ADD MORE PROXIES.
#
#    location /app3 {
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header Host $http_host;
#        proxy_pass https://app3:443;
#        proxy_redirect off;
#    }
#
#
#    location /app4 {
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header Host $http_host;
#        proxy_pass https://app4:443;
#        proxy_redirect off;
#    }
#

}